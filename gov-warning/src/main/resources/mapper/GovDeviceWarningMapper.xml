<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.krt.gov.warning.mapper.GovDeviceWarningMapper">

    <sql id="Base_Column_List">
        id,attr_type_code,attr_type_name,area,temp_l,temp_h,humi_l,humi_h,power,sms_mode,week,is_holiday,status,inserter,insert_time,updater,update_time
    </sql>

    <!-- 带参数查询设备预警设置列表 -->
    <select id="selectPageList" resultType="com.krt.gov.warning.entity.GovDeviceWarning">
        select
        <include refid="Base_Column_List"/>
        from gov_device_warning where 1=1
        <if test="attrTypeCode !=null and attrTypeCode!=''">
            and attr_type_code = #{attrTypeCode}
        </if>
        <if test="status !=null and status!=''">
            and status = #{status}
        </if>
        <if test="area !=null and area!=''">
            and area = #{area}
        </if>
    </select>

    <!--根据预警设备类型查询预警类型-->
    <select id="selectWarnTypeByCode" parameterType="java.lang.String" resultType="java.util.Map">
        select code, name from sys_dic where pid in
        ( select id from sys_dic where code = #{code} )
    </select>

    <!-- 修改设备预警状态-->
    <update id="updateStatusById" parameterType="java.lang.String">
        update gov_device_warning set status = #{status} where id = #{id}
    </update>

    <!--根据字典code 查找字典name-->
    <select id="selectDicByCode" parameterType="java.lang.String" resultType="java.lang.String">
        select name from sys_dic where code = #{code}
    </select>

    <!--查找gov_device_warning表-->
    <select id="selectAllById" resultType="com.krt.gov.warning.entity.GovDeviceWarning"
            parameterType="java.lang.Integer">
        select * from gov_device_warning where id = #{id}
    </select>

    <!--根据warnId查找关联的设备-->
    <select id="selectLinkByWarnId" resultType="java.util.Map" parameterType="java.lang.String">
        select id, warning_id, device_id, device_name
        from gov_device_warning_link where warning_id = #{warnId}
    </select>

    <!--根据warnId查找关联的人员-->
    <select id="selectStaffByWarnId" resultType="java.util.Map" parameterType="java.lang.String">
        select id, warning_id, staff_uuid, staff_name, staff_phone, job
        from gov_device_warning_staff where warning_id = #{warnId}
    </select>

    <!--根据warnId查找预警时间段-->
    <select id="selectTimeByWarnId" resultType="java.util.Map" parameterType="java.lang.String">
        select id, warning_id, s_time, f_time
        from gov_device_warning_time where warning_id = #{warnId}
    </select>

    <!--保存关联设备的数量和推送人员名称-->
    <update id="saveDevAndStaff" parameterType="java.lang.String">
        UPDATE gov_device_warning SET link_num = #{linkNum}, push_man = #{staffName}
        WHERE id = #{warnId}
    </update>

    <!--根据设备id,温度,湿度获得需要发出警报的设备对应的手机号和需要发送的信息-->
    <select id="selectWarningPhoneInfo" resultType="java.util.Map">
        SELECT gdwl.warning_id as warningId,gdw.sms_mode AS smsMode,gdws.staff_phone AS staffPhone,gdws.staff_name AS staffName,gd.`name` AS deviceName FROM gov_device_warning gdw
        INNER JOIN gov_device_warning_link gdwl ON gdw.id=gdwl.warning_id
        INNER JOIN gov_device_warning_staff gdws ON gdw.id=gdws.warning_id
        INNER JOIN gov_device gd ON gd.id = gdwl.device_id
        WHERE gd.device_id=#{deviceId} AND gdw.`status` = 1 AND(gdw.temp_l > #{temp} OR #{temp} > gdw.temp_h OR gdw.humi_l > #{humi} OR #{humi} > gdw.humi_h)
        AND find_in_set((select date_format(curdate(),'%w') from dual), gdw.week) >= 1
        AND gdws.staff_phone IS NOT NULL
    </select>

    <!--开关查预警电话和短信信息-->
    <select id="getWarningPhoneBySwitch" resultType="java.util.Map">
        SELECT gdwl.warning_id as warningId,gdw.sms_mode AS smsMode,gdws.staff_phone AS staffPhone,gdws.staff_name AS staffName,gd.`name` AS deviceName,gdw.power FROM gov_device_warning_link gdwl
         LEFT JOIN gov_device gd ON gd.id=gdwl.device_id
         LEFT JOIN gov_device_warning gdw ON gdwl.warning_id=gdw.id
         LEFT JOIN gov_device_warning_staff gdws ON gdws.warning_id=gdw.id
         WHERE gd.device_id=#{deviceId} AND gdw.`status`=1
         AND ((gd.`port`=1 AND gdw.power=#{port1})
         or (gd.`port`=2 AND gdw.power=#{port2})
         or (gd.`port`=3 AND gdw.power=#{port3})
         or (gd.`port`=4 AND gdw.power=#{port4})
         or (gd.`port`=5 AND gdw.power=#{port5}))
         AND find_in_set((select date_format(curdate(),'%w') from dual), gdw.week) >= 1
         AND gdws.staff_phone IS NOT NULL
    </select>
</mapper>

